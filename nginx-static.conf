# 定义全局设置
user  nginx;
worker_processes  1;

# 错误日志和进程文件
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# 事件块
events {
    worker_connections  1024;
}

# HTTP 块
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # Gzip 压缩
    gzip  on;

    # 服务器块
    server {
        listen 80;
        
        server_name localhost;

        # set $cors '';
        # if ($http_origin ~* ^(http://localhost:3000|http://124.71.214.102:3000)$) {
        #     set $cors 'true';
        # }

        location / {

        #   if ($cors) {
        #     add_header 'Access-Control-Allow-Origin' "$cors" always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        #     add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        #     add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        # }
            add_header 'Access-Control-Allow-Origin' "*";
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
            
            # 处理预检请求
            if ($request_method = 'OPTIONS') {
                return 204;
            }

            alias /usr/share/nginx/html/;
            autoindex on;  # 允许目录索引
        }

        # 可以添加更多的自定义配置，如缓存、压缩等
    }
}